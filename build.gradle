buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
    repositories {
        gradlePluginPortal()
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'mobi.waterdog.kgeojson'

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId "kgeojson"
            version project.version

            pom {
                name = 'KGeoJson'
                description = 'A simple GeoJson library written in Kotlin'
                url = 'https://github.com/waterdog-oss/kgeojson'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/waterdog-oss/ktor-template'
                    }
                }
                developers {
                    developer {
                        id = "rui.teixeira"
                        name = "Rui Teixeira"
                        email = "rui.teixeira@waterdog.mobi"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/waterdog-oss/kgeojson.git'
                    developerConnection = 'scm:git:git://github.com:waterdog-oss/kgeojson.git'
                    url = 'https://github.com/waterdog-oss/kgeojson'
                }
            }

            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            from components.java
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}

// Junit 5 setup
tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.amshove.kluent:kluent:$kluentVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serializationVersion"
}
